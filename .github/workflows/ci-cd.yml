name: environment-DEPLOY

env:
  LOCATION: centralus
  APP_PREFIX: wbademo
  SQL_ADMIN_OBJECT_ID: da40d0a0-5874-4dfa-885d-f56d0c9b674b

on:
  issue_comment:
    types: [ created, edited ]

jobs:
  build:
    runs-on: ubuntu-latest
    if: contains(github.event.comment.body, '/full:')

    steps:
    # checkout - remember we have to check out the PR code!
    - uses: actions/checkout@v2
    - name: Checkout PR code
      uses: dawidd6/action-checkout-pr@v1
      with:
        pr: ${{ github.event.issue.number }}

    - name: "Set env variables from chat message"
      run: |
        pattern="^\/full\:(\w+)$"
        [[ "${{ github.event.comment.body }}" =~ $pattern ]]
        echo ::set-env name=ENVIRONMENT::"${BASH_REMATCH[1]}"

    - name: Create starting comment
      uses: peter-evans/create-or-update-comment@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        issue-number: ${{ github.event.issue.number }}
        body: |
          Hey, @${{ github.event.comment.user.login }}!
          :rocket: Deploying full environment to ${{ env.ENVIRONMENT }} is beginning! :rocket:

    # Install the latest release of the bicep CLI
    - name: Install bicep CLI
      run: |
        curl -Lo bicep https://github.com/Azure/bicep/releases/latest/download/bicep-linux-x64
        chmod +x ./bicep
        sudo mv ./bicep /usr/local/bin/bicep
        bicep --help

    # Transpile network bicep file into ARM template
    - name: Build network ARM Template from bicep file
      run: |
        bicep build ./deployments/network.bicep

    # Transpile application bicep file into ARM template
    - name: Build application ARM Template from bicep file
      run: |
        bicep build ./deployments/application.bicep

    - name: 'Login via Az module'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        enable-AzPSSession: true

  deploy_network:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
    # Deploy network template
    - name: Deploy network template
      uses: azure/powershell@v1
      with:
        azPSVersion: latest
        inlineScript: |
          # deploy infra resources
          $additionalParams = @{
            appPrefix   = "${{ env.APP_PREFIX }}"
            environment = "${{ env.ENVIRONMENT }}"
          }

          Write-Verbose "Deploying..."
          New-AzDeployment -TemplateFile ./deployments/network.json `
              -Location '${{ env.LOCATION }}' `
              -TemplateParameterObject $additionalParams `
              -Verbose

  deploy_application:
    needs: [deploy_network]
    runs-on: ubuntu-latest

    steps:
    # Deploy application template
    - name: Deploy application template
      uses: azure/powershell@v1
      with:
        azPSVersion: latest
        inlineScript: |
          # deploy infra resources
          $additionalParams = @{
            appPrefix         = "${{ env.APP_PREFIX }}"
            environment       = "${{ env.ENVIRONMENT }}"
            vmAdminPwd        = "${{ secrets.VM_ADMIN_PASSWORD }}"
            sqlAdminObjectId  = "${{ env.SQL_ADMIN_OBJECT_ID }}"
            sqlAdminLoginName = "groot"
            vmAdminUserName   = "groot"
          }

          Write-Verbose "Deploying..."
          New-AzDeployment -TemplateFile ./deployments/application.json `
              -Location '${{ env.LOCATION }}' `
              -TemplateParameterObject $additionalParams `
              -Verbose

  deploy_monitoring:
    needs: [deploy_application]
    runs-on: ubuntu-latest

    steps:
    - name: Enable Diagnostics logging
      uses: azure/powershell@v1
      with:
        azPSVersion: 'latest'
        inlineScript: |
          # load module
          . monitoring/Deploy-AzDiagnostics.ps1

          # Invoke
          $functionInput = @{
             WorkspaceResourceGroup = '${{ env:APP_PREFIX }}-${{ env.ENVIRONMENT }}-app'
          }

          Deploy-AzDiagnostics @functionInput -Verbose

    - name: Deploy Dashboards
      uses: azure/powershell@v1
      with:
        azPSVersion: 'latest'
        inlineScript: |
          # load module
          . monitoring/Deploy-AzDashboards.ps1

          # Invoke
          $functionInput = @{
             ResourceGroupName = '${{ env:APP_PREFIX }}-${{ env.ENVIRONMENT }}-app'
          }

          Deploy-AzDashboards @functionInput -Verbose

    - name: Create completed comment
      uses: peter-evans/create-or-update-comment@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        issue-number: ${{ github.event.issue.number }}
        body: |
          Hey, @${{ github.event.comment.user.login }}!
          :tada: Full environment to ${{ env.ENVIRONMENT }} deployment completed! :tada:
